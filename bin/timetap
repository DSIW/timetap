#!/usr/bin/env ruby
# coding: utf-8

require 'time_tap'


require 'yaml'
user_config = File.expand_path('~/.timetap.config')
TimeTap.config.merge! YAML.load_file(user_config) if File.exist?(user_config)


require 'optparse'
OptionParser.new do |opts|
  opts.banner = "Usage: #{$0} [options]"

  opts.on("-f", "--foreground", "Run in foreground (default).") do
    TimeTap.config[:background] = false
  end
  
  opts.on("-b", "--background", "Run in background.") do
    TimeTap.config[:background] = true
  end
  
  opts.on("-p", "--port PORT", "Use specified port for server. (default #{TimeTap.config['port']})") do |value|
    TimeTap.config[:port] = value
  end
  
  opts.on("-i", "--install", "Sets TimeTap to be launched automatically at login, and boots it.") do
    puts 'Installing launcher...'
    TimeTap.install_launcher!
    
    unless File.exist? user_config
      require 'fileutils'
      puts 'Copying example config file to ~/.tap_config...'
      FileUtils.cp config_file, user_config
    end
    
    puts 'Reloading system launcher...'
    TimeTap.reload_launcher!
    
    exit # TimeTap::reload_launcher! uses `exec` so this is never actually ran
  end
end.parse!

TimeTap.config[:foreground] = !TimeTap.config[:background]
if TimeTap.config[:background]
  require 'time_tap/daemon'
  
  pid = fork {
    # Try to replace "ruby" with "TimeTap" in the command string (for "ps -A" & co.)
    $0 = 'TimeTap'
    
    Process.daemon(true)
    TimeTap.start
  }
else
  puts '[TimeTap] Going foreground...'
  TimeTap.start
end
